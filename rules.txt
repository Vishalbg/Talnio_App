rules_version = '2'; service cloud.firestore { match /databases/{database}/documents {
match /users/{userId} {
  allow read: if request.auth != null && (
    request.auth.uid == userId ||
    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['manager', 'admin']
  );

  allow write: if request.auth != null && (
    request.auth.uid == userId ||
    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['manager', 'admin']
  );

  allow update: if request.auth != null && (
    (
      request.auth.uid == userId &&
      request.resource.data.keys().hasOnly(['name'])
    ) ||
    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
  );
}

    

match /attendance/{attendanceId} {
  allow read: if request.auth != null && 
    (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager');
  allow create: if request.auth != null && 
    request.resource.data.userId == request.auth.uid;
  allow read, update, delete: if request.auth != null && 
    resource.data.userId == request.auth.uid;
}

match /tasks/{taskId} {
  allow read, write, delete: if request.auth != null && 
    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
  allow read, create, update, delete: if request.auth != null && 
    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager';
  allow read, update: if request.auth != null && 
    resource.data.assignedTo == request.auth.uid;
}

match /reports/{reportId} {
  allow read, write, delete: if request.auth != null && 
    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
  allow read: if request.auth != null && 
    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager';
  allow create: if request.auth != null && 
    request.resource.data.userId == request.auth.uid;
  allow read, update, delete: if request.auth != null && 
    resource.data.userId == request.auth.uid;
}

match /config/{configId} {
  allow read, write: if request.auth != null && (
    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager'
  );
}

match /office_locations/{locationId} {
  allow read: if request.auth != null;
  allow write: if request.auth != null && 
    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
}

match /otp/{email} {
  allow create: if request.auth == null; 
  allow read, delete: if request.auth == null && 
    request.resource.data.email == email;
  allow read, delete: if request.auth != null && 
    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
}
}}